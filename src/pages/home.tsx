export function HomePage() {
    return (
        <>
        <p>I often get told that I write too much. I am currently in the process of writing a three-part novel on why this isn't true, but until then, I've written a case study on each piece of tech that I'm confident with, which you can find above.</p>
        <h2>A bit about me</h2>
        <p>My name is Anthony and I'm a 26 year-old programmer based in the United Kingdom.</p>
        <p>My dad was a programmer/electronics engineer in the 80s/90s and got me into programming at a young age. I started with Python at age 10 writing some really basic scripts (which is ironic because 26 year-old me doesn't actually know any Python). At age 12 I made my first tacky HTML-only website for a school project about India. From the age of about 13 I started getting into C++. At age 14 I started making things in Unity with C#. Despite just beginning a law degree, at age 17/18 I started getting more into web development, making websites, creating APIs in PHP and Go, and creating a law app for Android in Java.</p>
        <p>I guess you could say I really was a <i>junior</i> developer!</p>
        <h2>Looking for an awesome employee?</h2>
        <p>I was once asked in an interview <i>"What would you say makes you stand out in comparison to other candidates?"</i>. I don't really know whether they were impressed by my answer or not (if it helps, I got the job), but I <i>really</i> hated answering it. I've always thought that it's very un-English to boast about yourself. Please forgive me though as the occasion demands it:</p>
        <ul>
            <li><b>Super-smart.</b> There is nothing I can't learn in a day or two, no problem that I haven't been able to solve. I've don't think I've ever had to ask someone else for the answer to anything (unless the question was <i>"What's the password to the database?"</i>).</li>
            <li><b>No ego.</b> I know some of my portfolio is written very snappily, but actually I hate ego. I just like to focus on my work and produce the best stuff I can. I avoid drama like the plague. I am not interested in who is better than me, or who is worse than me, or what Stacey said to Frank over lunch.</li>
            <li><b>Wide range of programming, personal and business experience.</b> I've worn a lot of hats - I've been the singer in bands, been to law school, learnt Japanese, taken part in boxing and debate club in the same week, been born the son of business owners, written for a magazine, worked collaboratively with product managers and project analysts, won three lawsuits, had YouTube channels, been president of the hall committee, been a web developer, created games, setup build and test pipelines, hosted their own servers and websites... my point is that you <i>could</i> hire someone with X amount of years in [insert tech stack here]. This approach is fine, and if you are just looking to fill seats, then this is often a good way to do it. But if you want someone who's actually going to bring added value to a business, such as someone who is capable of understanding the needs of the business and their customers, and who has the wide-reaching life experience to be able to make high-level decisions accordingly, then it's not the <i>best</i> way to make hiring decisions. But that's not to say that I know everything (I don't). Which brings me on to my next point...</li>
            <li><b>Open to learn.</b> Is there something in your tech stack that I don't know? Give me two days and I'll learn it. Want to try out a new piece of tech that the company has never used before? No problem, I'll have a prototype ready by tomorrow! A lot of people are scared of trying new things, but for me it's just part of the journey that I enjoy.</li>
            <li><b>Someone who actually cares.</b> If I see something that I think could be better, I'm not afraid to bring it up in a mature and constructive way (Even if that means more work for me!). If I have broken something, I am already working on fixing it, and thinking about how I can not do it again. If I've made something that I think could be better (and time allows), I am already making it better.</li>
        </ul>
        </>
    )
}